name: ' CI/CD'

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '.github/workflows/*.yaml'
      - '!.github/workflows/CICD.yaml'
    branches: [ 'main', 'release/*', 'feature/*', 'test/main' ]

defaults:
  run:
    shell: powershell

permissions:
  actions: read
  contents: read
  id-token: write
  pages: read

env:
  workflowDepth: 1
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  Initialization:
    needs: [ ]
    runs-on: [ windows-latest ]
    outputs:
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
      environmentsMatrixJson: ${{ steps.DetermineDeploymentEnvironments.outputs.EnvironmentsMatrixJson }}
      environmentCount: ${{ steps.DetermineDeploymentEnvironments.outputs.EnvironmentCount }}
      deploymentEnvironmentsJson: ${{ steps.DetermineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson }}
      generateALDocArtifact: ${{ steps.DetermineDeploymentEnvironments.outputs.GenerateALDocArtifact }}
      deployALDocArtifact: ${{ steps.DetermineDeploymentEnvironments.outputs.DeployALDocArtifact }}
      deliveryTargetsJson: ${{ steps.DetermineDeliveryTargets.outputs.DeliveryTargetsJson }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
      githubRunnerShell: ${{ steps.ReadSettings.outputs.GitHubRunnerShell }}
      projects: ${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}
      projectDependenciesJson: ${{ steps.determineProjectsToBuild.outputs.ProjectDependenciesJson }}
      buildOrderJson: ${{ steps.determineProjectsToBuild.outputs.BuildOrderJson }}
      powerPlatformSolutionFolder: ${{ steps.DeterminePowerPlatformSolutionFolder.outputs.powerPlatformSolutionFolder }}
      workflowDepth: ${{ steps.DetermineWorkflowDepth.outputs.WorkflowDepth }}
    steps:
      - name: Dump Workflow Information
        uses: cegekaJG/AL-Go-Actions/DumpWorkflowInfo@cegeka
        with:
          shell: powershell

      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          lfs: true

      - name: Initialize the workflow
        id: init
        uses: cegekaJG/AL-Go-Actions/WorkflowInitialize@cegeka
        with:
          shell: powershell

      - name: Read settings
        id: ReadSettings
        uses: cegekaJG/AL-Go-Actions/ReadSettings@cegeka
        with:
          shell: powershell
          get: type, powerPlatformSolutionFolder

      - name: Determine Workflow Depth
        id: DetermineWorkflowDepth
        run: |
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "WorkflowDepth=$($env:workflowDepth)"

      - name: Determine Projects To Build
        id: determineProjectsToBuild
        uses: cegekaJG/AL-Go-Actions/DetermineProjectsToBuild@cegeka
        with:
          shell: powershell
          maxBuildDepth: ${{ env.workflowDepth }}

      - name: Determine PowerPlatform Solution Folder
        id: DeterminePowerPlatformSolutionFolder
        if: env.type == 'PTE'
        run: |
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "powerPlatformSolutionFolder=$($env:powerPlatformSolutionFolder)"

      - name: Determine Delivery Target Secrets
        id: DetermineDeliveryTargetSecrets
        uses: cegekaJG/AL-Go-Actions/DetermineDeliveryTargets@cegeka
        with:
          shell: powershell
          projectsJson: '${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}'
          checkContextSecrets: 'false'

      - name: Read secrets
        id: ReadSecrets
        uses: cegekaJG/AL-Go-Actions/ReadSecrets@cegeka
        with:
          shell: powershell
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: ${{ steps.DetermineDeliveryTargetSecrets.outputs.ContextSecrets }}

      - name: Determine Delivery Targets
        id: DetermineDeliveryTargets
        uses: cegekaJG/AL-Go-Actions/DetermineDeliveryTargets@cegeka
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: powershell
          projectsJson: '${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}'
          checkContextSecrets: 'true'

      - name: Determine Deployment Environments
        id: DetermineDeploymentEnvironments
        uses: cegekaJG/AL-Go-Actions/DetermineDeploymentEnvironments@cegeka
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          getEnvironments: '*'
          type: 'CD'

  CheckForUpdates:
    needs: [ Initialization ]
    runs-on: [ windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Read settings
        uses: cegekaJG/AL-Go-Actions/ReadSettings@cegeka
        with:
          shell: powershell
          get: templateUrl

      - name: Check for updates to AL-Go system files
        uses: cegekaJG/AL-Go-Actions/CheckForUpdates@cegeka
        with:
          shell: powershell
          templateUrl: ${{ env.templateUrl }}
          downloadLatest: true

  Build:
    needs: [ Initialization ]
    if: (!failure()) && (!cancelled()) && fromJson(needs.Initialization.outputs.buildOrderJson)[0].projectsCount > 0
    strategy:
      matrix:
        include: ${{ fromJson(needs.Initialization.outputs.buildOrderJson)[0].buildDimensions }}
      fail-fast: false
    name: Build ${{ matrix.projectName }} (${{ matrix.buildMode }})
    uses: ./.github/workflows/_BuildALGoProject.yaml
    secrets: inherit
    with:
      shell: ${{ matrix.githubRunnerShell }}
      runsOn: ${{ matrix.githubRunner }}
      project: ${{ matrix.project }}
      projectName: ${{ matrix.projectName }}
      buildMode: ${{ matrix.buildMode }}
      projectDependenciesJson: ${{ needs.Initialization.outputs.projectDependenciesJson }}
      secrets: 'licenseFileUrl,codeSignCertificateUrl,*codeSignCertificatePassword,keyVaultCertificateUrl,*keyVaultCertificatePassword,keyVaultClientId,gitHubPackagesContext,applicationInsightsConnectionString'
      publishThisBuildArtifacts: ${{ needs.Initialization.outputs.workflowDepth > 1 }}
      publishArtifacts: ${{ github.ref_name == 'main' || startswith(github.ref_name, 'release/') || startswith(github.ref_name, 'releases/') || needs.Initialization.outputs.deliveryTargetsJson != '[]' || needs.Initialization.outputs.environmentCount > 0 }}
      signArtifacts: true
      useArtifactCache: true

  DeployALDoc:
    needs: [ Initialization, Build ]
    if: (!cancelled()) && needs.Build.result == 'Success' && needs.Initialization.outputs.generateALDocArtifact == 1 && github.ref_name == 'main'
    runs-on: [ windows-latest ]
    name: Deploy Reference Documentation
    permissions:
      contents: read
      actions: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: '.artifacts'

      - name: Read settings
        uses: cegekaJG/AL-Go-Actions/ReadSettings@cegeka
        with:
          shell: powershell

      - name: Setup Pages
        if: needs.Initialization.outputs.deployALDocArtifact == 1
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Build Reference Documentation
        uses: cegekaJG/AL-Go-Actions/BuildReferenceDocumentation@cegeka
        with:
          shell: powershell
          artifacts: '.artifacts'

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: ".aldoc/_site/"

      - name: Deploy to GitHub Pages
        if: needs.Initialization.outputs.deployALDocArtifact == 1
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  Deploy:
    needs: [ Initialization, Build ]
    if: (!cancelled()) && (needs.Build.result == 'success' || needs.Build.result == 'skipped') && needs.Initialization.outputs.environmentCount > 0
    strategy: ${{ fromJson(needs.Initialization.outputs.environmentsMatrixJson) }}
    runs-on: ${{ fromJson(matrix.os) }}
    name: Deploy to ${{ matrix.environment }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    environment:
      name: ${{ matrix.environment }}
      url: ${{ steps.Deploy.outputs.environmentUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: '.artifacts'

      - name: Read settings
        uses: cegekaJG/AL-Go-Actions/ReadSettings@cegeka
        with:
          shell: ${{ matrix.shell }}
          get: type,powerPlatformSolutionFolder

      - name: EnvName
        id: envName
        run: |
          $errorActionPreference = "Stop"; $ProgressPreference = "SilentlyContinue"; Set-StrictMode -Version 2.0
          $envName = '${{ matrix.environment }}'.split(' ')[0]
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "envName=$envName"

      - name: Read secrets
        id: ReadSecrets
        uses: cegekaJG/AL-Go-Actions/ReadSecrets@cegeka
        with:
          shell: ${{ matrix.shell }}
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: '${{ steps.envName.outputs.envName }}-AuthContext,${{ steps.envName.outputs.envName }}_AuthContext,AuthContext'

      - name: Deploy to Business Central
        id: Deploy
        uses: cegekaJG/AL-Go-Actions/Deploy@cegeka
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: ${{ matrix.shell }}
          environmentName: ${{ matrix.environment }}
          artifactsFolder: '.artifacts'
          type: 'CD'
          deploymentEnvironmentsJson: ${{ needs.Initialization.outputs.deploymentEnvironmentsJson }}

      - name: Deploy to Power Platform
        if: env.type == 'PTE' && env.powerPlatformSolutionFolder != ''
        uses: cegekaJG/AL-Go-Actions/DeployPowerPlatform@cegeka
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: powershell
          environmentName: ${{ matrix.environment }}
          artifactsFolder: '.artifacts'
          deploymentEnvironmentsJson: ${{ needs.Initialization.outputs.deploymentEnvironmentsJson }}

  Deliver:
    needs: [ Initialization, Build ]
    if: (!cancelled()) && (needs.Build.result == 'success' || needs.Build.result == 'skipped') && needs.Initialization.outputs.deliveryTargetsJson != '[]'
    strategy:
      matrix:
        deliveryTarget: ${{ fromJson(needs.Initialization.outputs.deliveryTargetsJson) }}
      fail-fast: false
    runs-on: [ windows-latest ]
    name: Deliver to ${{ matrix.deliveryTarget }}
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: '.artifacts'

      - name: Read settings
        uses: cegekaJG/AL-Go-Actions/ReadSettings@cegeka
        with:
          shell: powershell

      - name: Read secrets
        id: ReadSecrets
        uses: cegekaJG/AL-Go-Actions/ReadSecrets@cegeka
        with:
          shell: powershell
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: '${{ matrix.deliveryTarget }}Context'

      - name: Deliver
        uses: cegekaJG/AL-Go-Actions/Deliver@cegeka
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: powershell
          type: 'CD'
          projects: ${{ needs.Initialization.outputs.projects }}
          deliveryTarget: ${{ matrix.deliveryTarget }}
          artifacts: '.artifacts'

  PostProcess:
    needs: [ Initialization, Build, Deploy, Deliver, DeployALDoc ]
    if: (!cancelled())
    runs-on: [ windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Finalize the workflow
        id: PostProcess
        uses: cegekaJG/AL-Go-Actions/WorkflowPostProcess@cegeka
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          currentJobContext: ${{ toJson(job) }}
